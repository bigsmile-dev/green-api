const express = require('express');
const cors = require('cors');
const path = require('path');
const fetch = require('node-fetch');
const multer = require('multer');
const fs = require('fs');

const app = express();
const PORT = process.env.PORT || 3000;

// ะัะพะผะตะถััะพัะฝะพะต ะะ
app.use(cors());
app.use(express.json());
app.use(express.static(path.join(__dirname, '.')));

// ะะฐะทะพะฒัะน URL GREEN-API
const GREEN_API_BASE_URL = 'https://api.green-api.com';

// ะัะพะบัะธ ัะฝะดะฟะพะธะฝั ะดะปั ะทะฐะฟัะพัะพะฒ GREEN-API
app.post('/api/green-api/:idInstance/:method/:apiToken', async (req, res) => {
    try {
        const { idInstance, method, apiToken } = req.params;
        
        // ะัะพะฒะตัะธัั ะฒัะพะดะฝัะต ะฟะฐัะฐะผะตััั
        if (!idInstance || !method || !apiToken) {
            return res.status(400).json({
                error: 'ะะตะฒะตัะฝัะน ะทะฐะฟัะพั',
                message: 'ะััััััะฒััั ะพะฑัะทะฐัะตะปัะฝัะต ะฟะฐัะฐะผะตััั: idInstance, method ะธะปะธ apiToken'
            });
        }

        // ะัะพะฒะตัะธัั ัะพัะผะฐั ััะตัะฝัั ะดะฐะฝะฝัั (ะฑะฐะทะพะฒะฐั ะฟัะพะฒะตัะบะฐ)
        if (idInstance === '123' || apiToken === 'asd') {
            return res.status(400).json({
                error: 'ะะตะฒะตัะฝัะต ััะตัะฝัะต ะดะฐะฝะฝัะต',
                message: 'ะะพะถะฐะปัะนััะฐ, ะฒะฒะตะดะธัะต ะดะตะนััะฒะธัะตะปัะฝัะต idInstance ะธ ApiTokenInstance ะธะท ะฒะฐัะตะณะพ ะฐะบะบะฐัะฝัะฐ GREEN-API'
            });
        }

        const url = `${GREEN_API_BASE_URL}/waInstance${idInstance}/${method}/${apiToken}`;
        
        console.log(`Making request to: ${url}`);
        
        const options = {
            method: req.body.httpMethod || 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        };

        if (req.body.data) {
            options.body = JSON.stringify(req.body.data);
        }

        const response = await fetch(url, options);
        
        // ะัะพะฒะตัะธัั, ัะฒะปัะตััั ะปะธ ะพัะฒะตั JSON
        const contentType = response.headers.get('content-type');
        
        if (!contentType || !contentType.includes('application/json')) {
            // ะัะปะธ ะฝะต JSON, ะฟะพะปััะธัั ัะตะบัั ััะพะฑั ัะฒะธะดะตัั ััะพ ะผั ะฟะพะปััะธะปะธ
            const text = await response.text();
            console.error('ะะพะปััะตะฝ ะฝะต-JSON ะพัะฒะตั:', text.substring(0, 200));
            
            return res.status(response.status || 500).json({
                error: 'ะะตะฒะตัะฝัะน ะพัะฒะตั API',
                message: `GREEN-API ะฒะตัะฝัะป ะฝะต-JSON ะพัะฒะตั. ะกัะฐััั: ${response.status}. ะะฑััะฝะพ ััะพ ะพะทะฝะฐัะฐะตั ะฝะตะฒะตัะฝัะต ััะตัะฝัะต ะดะฐะฝะฝัะต ะธะปะธ ัะฝะดะฟะพะธะฝั API.`,
                details: text.substring(0, 200) + (text.length > 200 ? '...' : '')
            });
        }

        const data = await response.json();

        res.status(response.status).json(data);
    } catch (error) {
        console.error('API Error:', error);
        
        // ะะพะปะตะต ัะฟะตัะธัะธัะฝะฐั ะพะฑัะฐะฑะพัะบะฐ ะพัะธะฑะพะบ
        if (error.message.includes('invalid json response body')) {
            res.status(400).json({ 
                error: 'ะะตะฒะตัะฝัะน ะพัะฒะตั API', 
                message: 'GREEN-API ะฒะตัะฝัะป ะฝะตะฒะตัะฝัะน ะพัะฒะตั. ะะพะถะฐะปัะนััะฐ, ะฟัะพะฒะตัััะต ะฒะฐัะธ ััะตัะฝัะต ะดะฐะฝะฝัะต (idInstance ะธ ApiTokenInstance).',
                details: 'ะฃะฑะตะดะธัะตัั, ััะพ ะฒั ะธัะฟะพะปัะทัะตัะต ัะตะฐะปัะฝัะต ััะตัะฝัะต ะดะฐะฝะฝัะต ะธะท ะฒะฐัะตะณะพ ะฐะบะบะฐัะฝัะฐ GREEN-API, ะฐ ะฝะต ะทะฐะฟะพะปะฝะธัะตะปะธ.'
            });
        } else if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {
            res.status(503).json({
                error: 'ะกะตัะตะฒะฐั ะพัะธะฑะบะฐ',
                message: 'ะะตะฒะพะทะผะพะถะฝะพ ะฟะพะดะบะปััะธัััั ะบ GREEN-API. ะะพะถะฐะปัะนััะฐ, ะฟัะพะฒะตัััะต ะฒะฐัะต ะธะฝัะตัะฝะตั-ัะพะตะดะธะฝะตะฝะธะต.',
                details: error.message
            });
        } else {
            res.status(500).json({ 
                error: 'ะะฝัััะตะฝะฝัั ะพัะธะฑะบะฐ ัะตัะฒะตัะฐ', 
                message: error.message 
            });
        }
    }
});

// ะะฑัะปัะถะธะฒะฐัั ะณะปะฐะฒะฝัั ัััะฐะฝะธัั
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});



// ะญะฝะดะฟะพะธะฝั ะฟัะพะฒะตัะบะธ ัะพััะพัะฝะธั
app.get('/health', (req, res) => {
    res.json({ status: 'OK', timestamp: new Date().toISOString() });
});

app.listen(PORT, () => {
    console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ http://localhost:${PORT}`);
    console.log(`๐ฑ ะกััะฐะฝะธัะฐ ัะตััะธัะพะฒะฐะฝะธั GREEN-API: http://localhost:${PORT}`);
});

module.exports = app; 